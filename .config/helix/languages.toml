[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
# formatter = { command = 'prettier', args = ["--parser", "json"] }
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "scss"
formatter = { command = 'prettier', args = ["--parser", "scss"] }
auto-format = true
indent = { tab-width = 4, unit = "  " }

[[language]]
name = "javascript"
# formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
# indent = { tab-width = 4, unit = "  " }
# language-servers = ["typescript-language-server", "tailwindcss-ls"]
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "typescript"
# formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
# indent = { tab-width = 4, unit = "  " }
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "tsx"
roots = ["tailwind.config.cjs", "tailwind.config.js"]
# formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
# language-servers = ["typescript-language-server", "tailwindcss-ls"]
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "vue"
auto-format = true
formatter = { command = "prettier", args = ["--parser", "vue"] }
language-servers = ["typescript-language-server", "tailwindcss-ls"]

[[language-server.typescript-language-server.config.plugins]]
name = "@vue/typescript-plugin"
location = "/home/han/.bun/install/global/node_modules/@vue/language-server/"
languages = ["vue"]

[[language]]
name = "python"
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
language-servers = ["pyright", "ruff", "gpt"]

[[language]]
name = "svelte"
formatter = { command = 'prettier', args = [
  "--plugin-search-dir",
  ".",
  "--write",
  ".",
] }
auto-format = true
language-servers = ["svelteserver", "tailwindcss-ls"]

[[language]]
name = "nix"
formatter = { command = "nixfmt" }
language-servers = ["nil", "gpt"]
auto-format = true

[[language]]
name = "rust"
language-servers = ["rust-analyzer", "tailwindcss-ls"]

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

[language-server.rust-analyzer.config.check]
command = "clippy"

# [language-server.tailwindcss-ls]
# config = { classAttributes = ["class", "className", "cssClasses"] }
# config = { userLanguages = { rust = "html", "*.rs" = "html" }, tailwindCSS = { experimental = { classRegex = [
#   [
#     "\\S*cssClasses\\S*={\\[([\\s\\S]+?)(?=][\\s;,.}])",
#     "'([^']*)'",
#   ],
#   "return '(.*)'",
# ] } } }

[language-server.gpt]
command = "helix-gpt"
args = ["--handler", "copilot"] # API key in environment.d/*.conf

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.ruff]
command = "ruff-lsp"

[language-server.ruff.config.settings]
args = ["--ignore", "E501"]

[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }
