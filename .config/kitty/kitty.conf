font_family      Iosevka
bold_font        Iosevka
italic_font      Iosevka
bold_italic_font Iosevka

symbol_map U+F890, U+E5C2, U+f5ff, U+f0fe, U+f146 Font Awesome 6 Pro

### Source: https://github.com/Sharparam/dotfiles/blob/main/kitty/.config/kitty/font-nerd-symbols.conf

# - Use additional nerd symbols
# See https://github.com/be5invis/Iosevka/issues/248
# See https://github.com/ryanoasis/nerd-fonts/wiki/Glyph-Sets-and-Code-Points

# Seti-UI + Custom
symbol_map U+E5FA-U+E6AC Symbols Nerd Font

# Devicons
symbol_map U+E700-U+E7C5 Symbols Nerd Font

# Font Awesome
symbol_map U+F000-U+F2E0 Symbols Nerd Font

# Font Awesome Extension
symbol_map U+E200-U+E2A9 Symbols Nerd Font

# Material Design Icons
symbol_map U+F0001-U+F1AF0 Symbols Nerd Font

# Weather
symbol_map U+E300-U+E3E3 Symbols Nerd Font

# Octicons
symbol_map U+F400-U+F532,U+2665,U+26A1 Symbols Nerd Font

# Powerline Symbols
symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 Symbols Nerd Font

# Powerline Extra Symbols
symbol_map U+E0A3,U+E0B4-U+E0C8,U+E0CA,U+E0CC-U+E0D4 Symbols Nerd Font

# IEC Power Symbols
symbol_map U+23FB-U+23FE,U+2B58 Symbols Nerd Font

# Font Logos
symbol_map U+F300-U+F32F Symbols Nerd Font

# Pomicons
symbol_map U+E000-U+E00A Symbols Nerd Font

# Codicons
symbol_map U+EA60-U+EBEB Symbols Nerd Font

# Additional sets
symbol_map U+E276C-U+E2771 Symbols Nerd Font # Heavy Angle Brackets
symbol_map U+2500-U+259F Symbols Nerd Font # Box Drawing

# Some symbols not covered by Symbols Nerd Font
# nonicons contains icons in the range: U+F101-U+F27D
# U+F167 is HTML logo, but YouTube logo in Symbols Nerd Font
symbol_map U+F102,U+F116-U+F118,U+F12F,U+F13E,U+F1AF,U+F1BF,U+F1CF,U+F1FF,U+F20F,U+F21F-U+F220,U+F22E-U+F22F,U+F23F,U+F24F,U+F25F nonicons

font_size 12

window_padding_width 0 5

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#: Color scheme {{{

#: The foreground and background colors

# background_opacity         1.0
# dynamic_background_opacity no

#: The opacity of the background. A number between 0 and 1, where 1 is
#: opaque and 0 is fully transparent.  This will only work if
#: supported by the OS (for instance, when using a compositor under
#: X11). Note that it only sets the default background color's
#: opacity. This is so that things like the status bar in vim,
#: powerline prompts, etc. still look good.  But it means that if you
#: use a color theme with a background color in your editor, it will
#: not be rendered as transparent.  Instead you should change the
#: default background color in your kitty config and not use a
#: background color in the editor color scheme. Or use the escape
#: codes to set the terminals default colors in a shell script to
#: launch your editor.  Be aware that using a value less than 1.0 is a
#: (possibly significant) performance hit.  If you want to dynamically
#: change transparency of windows set dynamic_background_opacity to
#: yes (this is off by default as it has a performance cost)

# dim_opacity 0.75

#: How much to dim text that has the DIM/FAINT attribute set. One
#: means no dimming and zero means fully dimmed (i.e. invisible).

# foreground #BFBFB6
# background #0B0E14
foreground #bfbab0
background #0f1419

selection_foreground #0B0E14
selection_background #BFBFB6

#: The foreground and background for text selected with the mouse


#: The 16 terminal colors. There are 8 basic colors, each color has a
#: dull and bright version. You can also set the remaining colors from
#: the 256 color table as color16 to color255.

color0 #0B0E14
color8 #565B66

#: black

color1 #F26D78
color9 #F26D78

#: red

color2  #7FD962
color10 #7FD962

#: green

color3  #FFB454
color11 #FFB454

#: yellow

color4  #59C2FF
color12 #59C2FF

#: blue

color5  #D2A6FF
color13 #D2A6FF

#: magenta

color6  #95E6CB
color14 #95E6CB

#: cyan

color7  #BFBDB6
color15 #BFBDB6

#: white

#: }}}

cursor_shape underline
cursor_underline_thickness 1.0

touch_scroll_multiplier 3.0

tab_bar_edge top
tab_bar_style powerline
tab_powerline_style slanted

confirm_os_window_close 2

# Window bindings
map shift+down move_window up
map shift+left move_window right
map shift+right move_window left
map shift+up move_window down
